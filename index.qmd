---
# title: My Slides
author: ""
format: html
# format: native
# filters:
#   - generate_table.lua
# https://quarto.org/docs/websites/website-listings-custom.html
# listing:
#   contents: 
#     - slides
#   sort: "date desc"
#   type: default
---

## My Slides

```{r}
#| echo: false
#| output: asis

# 設定資料夾路徑
folder_path <- "slides"

# 找出所有的 index.qmd 檔案
qmd_files <- list.files(path = folder_path, pattern = "index\\.qmd$", recursive = TRUE, full.names = TRUE)

# 篩選出同資料夾內有 index.html 的 index.qmd 檔案
qmd_files_with_html <- qmd_files[sapply(qmd_files, function(file) {
  html_file <- gsub("index\\.qmd$", "index.html", file)
  file.exists(html_file)
})]

is_null <- function(d) {
  if (is.null(d)) {
    return("3000-01-01")
  } else {
    return(d)
  }
}

df <- data.frame("Date" = numeric(0), "Title" = numeric(0))
for (i in qmd_files_with_html) {
  file_content <- rmarkdown:::read_utf8(i)
  yaml_content <- rmarkdown:::parse_yaml_front_matter(file_content)
  new_row <- data.frame(
    "Date" = is_null(yaml_content$date),
    "Title" = paste0("[", yaml_content$title, "](", dirname(i), ")")
  )
  df <- rbind(df, new_row)
}
# 將 'date' column 的型態轉換為日期
df$Date <- as.Date(df$Date)
# 根據 'date' 進行升序排序
sorted_df <- df[order(df$Date), ]

# 顯示排序後的 dataframe

cat("Date | Title\n")
cat("------- | -------\n")
result <- ""
for (i in 1:nrow(sorted_df)) {
  result <- paste0(
    result,
    as.character(sorted_df[i, 1]),
    " | ",
    as.character(sorted_df[i, 2]),
    "\n"
  )
}
cat(result)
```

```{r}
#| echo: false
content1 <- paste0(
  "## My Slides

Date | Title
------- | -------\n", result
)
# writeLines(content, "README.md")
```


### Note

```{r}
#| echo: false
#| output: asis

# 設定資料夾路徑
folder_path <- "note"

# 找出所有的 index.qmd 檔案
qmd_files <- list.files(path = folder_path, pattern = "index\\.qmd$", recursive = TRUE, full.names = TRUE)

# 篩選出同資料夾內有 index.html 的 index.qmd 檔案
qmd_files_with_html <- qmd_files[sapply(qmd_files, function(file) {
  html_file <- gsub("index\\.qmd$", "index.html", file)
  file.exists(html_file)
})]

is_null <- function(d) {
  if (is.null(d)) {
    # return("3000-01-01")
    return(character())
  } else {
    return(d)
  }
}

df <- data.frame("Date" = numeric(0), "Title" = numeric(0))
for (i in qmd_files_with_html) {
  file_content <- rmarkdown:::read_utf8(i)
  yaml_content <- rmarkdown:::parse_yaml_front_matter(file_content)
  new_row <- data.frame(
    "Date" = is_null(yaml_content$date),
    "Title" = paste0("[", yaml_content$title, "](", dirname(i), ")")
  )
  df <- rbind(df, new_row)
}
# 將 'date' column 的型態轉換為日期
df$Date <- as.Date(df$Date)
# 根據 'date' 進行升序排序
sorted_df <- df[order(df$Date), ]

# 顯示排序後的 dataframe

cat("Date | Title\n")
cat("------- | -------\n")
result <- ""
for (i in 1:nrow(sorted_df)) {
  result <- paste0(
    result,
    as.character(sorted_df[i, 1]),
    " | ",
    as.character(sorted_df[i, 2]),
    "\n"
  )
}
cat(result)
```

```{r}
#| echo: false
content2 <- paste0(
  "## Note

Date | Title
------- | -------\n", result
)
# concat content1 and content2
content <- paste0(content1 ,'\n\n', content2)
writeLines(content, "README.md")
```
